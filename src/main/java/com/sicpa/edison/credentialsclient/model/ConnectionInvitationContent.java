/*
 * Edison Credentials API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sicpa.edison.credentialsclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ConnectionInvitationContent
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-05T10:45:45.459026+01:00[Europe/Zurich]")
public class ConnectionInvitationContent {
  public static final String SERIALIZED_NAME_INVITATION_ID = "invitationId";
  @SerializedName(SERIALIZED_NAME_INVITATION_ID)
  private String invitationId;

  public static final String SERIALIZED_NAME_SERVICE_ENDPOINT = "serviceEndpoint";
  @SerializedName(SERIALIZED_NAME_SERVICE_ENDPOINT)
  private String serviceEndpoint;

  public static final String SERIALIZED_NAME_RECIPIENT_KEYS = "recipientKeys";
  @SerializedName(SERIALIZED_NAME_RECIPIENT_KEYS)
  private List<String> recipientKeys = new ArrayList<>();

  public static final String SERIALIZED_NAME_LABEL = "label";
  @SerializedName(SERIALIZED_NAME_LABEL)
  private String label;


  public ConnectionInvitationContent invitationId(String invitationId) {
    
    this.invitationId = invitationId;
    return this;
  }

   /**
   * The connection&#39;s invitation id
   * @return invitationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The connection's invitation id")

  public String getInvitationId() {
    return invitationId;
  }


  public void setInvitationId(String invitationId) {
    this.invitationId = invitationId;
  }


  public ConnectionInvitationContent serviceEndpoint(String serviceEndpoint) {
    
    this.serviceEndpoint = serviceEndpoint;
    return this;
  }

   /**
   * The connection&#39;s service endpoint
   * @return serviceEndpoint
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The connection's service endpoint")

  public String getServiceEndpoint() {
    return serviceEndpoint;
  }


  public void setServiceEndpoint(String serviceEndpoint) {
    this.serviceEndpoint = serviceEndpoint;
  }


  public ConnectionInvitationContent recipientKeys(List<String> recipientKeys) {
    
    this.recipientKeys = recipientKeys;
    return this;
  }

  public ConnectionInvitationContent addRecipientKeysItem(String recipientKeysItem) {
    this.recipientKeys.add(recipientKeysItem);
    return this;
  }

   /**
   * The list of recipient&#39;s keys
   * @return recipientKeys
  **/
  @ApiModelProperty(required = true, value = "The list of recipient's keys")

  public List<String> getRecipientKeys() {
    return recipientKeys;
  }


  public void setRecipientKeys(List<String> recipientKeys) {
    this.recipientKeys = recipientKeys;
  }


  public ConnectionInvitationContent label(String label) {
    
    this.label = label;
    return this;
  }

   /**
   * The connection&#39;s label
   * @return label
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The connection's label")

  public String getLabel() {
    return label;
  }


  public void setLabel(String label) {
    this.label = label;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConnectionInvitationContent connectionInvitationContent = (ConnectionInvitationContent) o;
    return Objects.equals(this.invitationId, connectionInvitationContent.invitationId) &&
        Objects.equals(this.serviceEndpoint, connectionInvitationContent.serviceEndpoint) &&
        Objects.equals(this.recipientKeys, connectionInvitationContent.recipientKeys) &&
        Objects.equals(this.label, connectionInvitationContent.label);
  }

  @Override
  public int hashCode() {
    return Objects.hash(invitationId, serviceEndpoint, recipientKeys, label);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConnectionInvitationContent {\n");
    sb.append("    invitationId: ").append(toIndentedString(invitationId)).append("\n");
    sb.append("    serviceEndpoint: ").append(toIndentedString(serviceEndpoint)).append("\n");
    sb.append("    recipientKeys: ").append(toIndentedString(recipientKeys)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

