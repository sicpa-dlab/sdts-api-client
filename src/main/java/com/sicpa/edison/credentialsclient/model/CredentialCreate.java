/*
 * Edison Credentials API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sicpa.edison.credentialsclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.sicpa.edison.credentialsclient.model.CredentialAttribute;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CredentialCreate
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-01T13:54:17.068559+01:00[Europe/Zurich]")
public class CredentialCreate {
  public static final String SERIALIZED_NAME_CONNECTION_ID = "connectionId";
  @SerializedName(SERIALIZED_NAME_CONNECTION_ID)
  private String connectionId;

  public static final String SERIALIZED_NAME_SCHEMA_ID = "schemaId";
  @SerializedName(SERIALIZED_NAME_SCHEMA_ID)
  private String schemaId;

  public static final String SERIALIZED_NAME_CREDENTIAL_DEFINITION_ID = "credentialDefinitionId";
  @SerializedName(SERIALIZED_NAME_CREDENTIAL_DEFINITION_ID)
  private String credentialDefinitionId;

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private List<CredentialAttribute> attributes = null;


  public CredentialCreate connectionId(String connectionId) {
    
    this.connectionId = connectionId;
    return this;
  }

   /**
   * A connection ID
   * @return connectionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3fa85f64-5717-4562-b3fc-2c963f66afa6", value = "A connection ID")

  public String getConnectionId() {
    return connectionId;
  }


  public void setConnectionId(String connectionId) {
    this.connectionId = connectionId;
  }


  public CredentialCreate schemaId(String schemaId) {
    
    this.schemaId = schemaId;
    return this;
  }

   /**
   * A schema ID
   * @return schemaId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A schema ID")

  public String getSchemaId() {
    return schemaId;
  }


  public void setSchemaId(String schemaId) {
    this.schemaId = schemaId;
  }


  public CredentialCreate credentialDefinitionId(String credentialDefinitionId) {
    
    this.credentialDefinitionId = credentialDefinitionId;
    return this;
  }

   /**
   * A credential definition ID
   * @return credentialDefinitionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A credential definition ID")

  public String getCredentialDefinitionId() {
    return credentialDefinitionId;
  }


  public void setCredentialDefinitionId(String credentialDefinitionId) {
    this.credentialDefinitionId = credentialDefinitionId;
  }


  public CredentialCreate comment(String comment) {
    
    this.comment = comment;
    return this;
  }

   /**
   * A human readable comment
   * @return comment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A human readable comment")

  public String getComment() {
    return comment;
  }


  public void setComment(String comment) {
    this.comment = comment;
  }


  public CredentialCreate attributes(List<CredentialAttribute> attributes) {
    
    this.attributes = attributes;
    return this;
  }

  public CredentialCreate addAttributesItem(CredentialAttribute attributesItem) {
    if (this.attributes == null) {
      this.attributes = new ArrayList<>();
    }
    this.attributes.add(attributesItem);
    return this;
  }

   /**
   * A list of credential attributes
   * @return attributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of credential attributes")

  public List<CredentialAttribute> getAttributes() {
    return attributes;
  }


  public void setAttributes(List<CredentialAttribute> attributes) {
    this.attributes = attributes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CredentialCreate credentialCreate = (CredentialCreate) o;
    return Objects.equals(this.connectionId, credentialCreate.connectionId) &&
        Objects.equals(this.schemaId, credentialCreate.schemaId) &&
        Objects.equals(this.credentialDefinitionId, credentialCreate.credentialDefinitionId) &&
        Objects.equals(this.comment, credentialCreate.comment) &&
        Objects.equals(this.attributes, credentialCreate.attributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(connectionId, schemaId, credentialDefinitionId, comment, attributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CredentialCreate {\n");
    sb.append("    connectionId: ").append(toIndentedString(connectionId)).append("\n");
    sb.append("    schemaId: ").append(toIndentedString(schemaId)).append("\n");
    sb.append("    credentialDefinitionId: ").append(toIndentedString(credentialDefinitionId)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

