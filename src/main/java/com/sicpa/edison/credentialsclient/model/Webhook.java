/*
 * Edison Credentials API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sicpa.edison.credentialsclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.sicpa.edison.credentialsclient.model.WebhookType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Webhook
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-12-10T15:13:18.986882+01:00[Europe/Zurich]")
public class Webhook {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active;

  public static final String SERIALIZED_NAME_SECRET = "secret";
  @SerializedName(SERIALIZED_NAME_SECRET)
  private String secret;

  public static final String SERIALIZED_NAME_WEBHOOK_TYPES = "webhookTypes";
  @SerializedName(SERIALIZED_NAME_WEBHOOK_TYPES)
  private List<WebhookType> webhookTypes = null;


  public Webhook id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * The webhook&#39;s id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The webhook's id")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public Webhook name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The webhook&#39;s name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The webhook's name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Webhook url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * The webhook&#39;s url
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The webhook's url")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    this.url = url;
  }


  public Webhook active(Boolean active) {
    
    this.active = active;
    return this;
  }

   /**
   * Defines if the webhook is active or not
   * @return active
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Defines if the webhook is active or not")

  public Boolean getActive() {
    return active;
  }


  public void setActive(Boolean active) {
    this.active = active;
  }


  public Webhook secret(String secret) {
    
    this.secret = secret;
    return this;
  }

   /**
   * Api key to authenticate against the url
   * @return secret
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Api key to authenticate against the url")

  public String getSecret() {
    return secret;
  }


  public void setSecret(String secret) {
    this.secret = secret;
  }


  public Webhook webhookTypes(List<WebhookType> webhookTypes) {
    
    this.webhookTypes = webhookTypes;
    return this;
  }

  public Webhook addWebhookTypesItem(WebhookType webhookTypesItem) {
    if (this.webhookTypes == null) {
      this.webhookTypes = new ArrayList<>();
    }
    this.webhookTypes.add(webhookTypesItem);
    return this;
  }

   /**
   * The webhook types associated with this webhook
   * @return webhookTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The webhook types associated with this webhook")

  public List<WebhookType> getWebhookTypes() {
    return webhookTypes;
  }


  public void setWebhookTypes(List<WebhookType> webhookTypes) {
    this.webhookTypes = webhookTypes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Webhook webhook = (Webhook) o;
    return Objects.equals(this.id, webhook.id) &&
        Objects.equals(this.name, webhook.name) &&
        Objects.equals(this.url, webhook.url) &&
        Objects.equals(this.active, webhook.active) &&
        Objects.equals(this.secret, webhook.secret) &&
        Objects.equals(this.webhookTypes, webhook.webhookTypes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, url, active, secret, webhookTypes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Webhook {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    secret: ").append(toIndentedString(secret)).append("\n");
    sb.append("    webhookTypes: ").append(toIndentedString(webhookTypes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

