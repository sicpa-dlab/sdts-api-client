openapi: 3.0.1
info:
  title: Edison Credentials API
  version: 0.0.1
servers:
  - url: 'http://localhost:8080'
    description: Generated server url
tags:
  - name: Internal webhooks
    description: The Internal Webhooks API
  - name: Webhooks
    description: The Webhooks API
  - name: Verifications
    description: The Verifications API
  - name: Messages
    description: The Messages API
  - name: Schemas
    description: The Schemas API
  - name: Clients
    description: The Clients API
  - name: Credentials
    description: The Credentials Issuance API
  - name: Credential Definitions
    description: The Credential Definitions API
  - name: Connections
    description: The Connections API
  - name: Organizations
    description: The Organizations API
paths:
  /clients:
    get:
      tags:
        - Clients
      summary: List all clients
      operationId: clientsGet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - Clients
      summary: Create a new client
      operationId: clientPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCreate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
  '/clients/{clientId}':
    get:
      tags:
        - Clients
      summary: Get client
      operationId: clientClientIdGet
      parameters:
        - name: clientId
          in: path
          description: An client ID.
          required: true
          schema:
            type: integer
            format: int32
          example: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
  '/connections/{connectionId}':
    get:
      tags:
        - Connections
      summary: Get connection
      operationId: connectionOrganizationIdConnectionIdGet
      parameters:
        - name: X-ORGANIZATION-ID
          in: header
          required: true
          schema:
            type: integer
            format: int32
        - name: connectionId
          in: path
          description: A connection ID.
          required: true
          schema:
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'
            type: string
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
    delete:
      tags:
        - Connections
      summary: Delete connection
      operationId: connectionOrganizationIdConnectionIdDelete
      parameters:
        - name: X-ORGANIZATION-ID
          in: header
          required: true
          schema:
            type: integer
            format: int32
        - name: connectionId
          in: path
          description: A connection ID.
          required: true
          schema:
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'
            type: string
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
  /connections:
    get:
      tags:
        - Connections
      summary: List all connections
      operationId: connectionsOrganizationIdGet
      parameters:
        - name: X-ORGANIZATION-ID
          in: header
          required: true
          schema:
            type: integer
            format: int32
        - name: state
          in: query
          description: Filter result by connection state.
          required: false
          schema:
            type: string
            enum:
              - INIT
              - INVITATION
              - REQUEST
              - RESPONSE
              - ACTIVE
              - ERROR
              - INACTIVE
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Connection'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
    post:
      tags:
        - Connections
      summary: Create a new connection invitation
      operationId: connectionsPost
      parameters:
        - name: X-ORGANIZATION-ID
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionInvitationCreate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionInvitationCreationResult'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
  /connections/invitation:
    post:
      tags:
        - Connections
      summary: Receive and accept a new connection invitation
      operationId: connectionsInvitationPost
      parameters:
        - name: X-ORGANIZATION-ID
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionInvitation'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
  '/credential-definitions/{credentialDefinitionId}':
    get:
      tags:
        - Credential Definitions
      summary: Get credentialDefinition
      operationId: clientClientIdGet_1
      parameters:
        - name: X-ORGANIZATION-ID
          in: header
          required: true
          schema:
            type: integer
            format: int32
        - name: credentialDefinitionId
          in: path
          description: A credentialDefinition ID.
          required: true
          schema:
            pattern: '([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$'
            type: string
          example: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialDefinition'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
  /credential-definitions:
    post:
      tags:
        - Credential Definitions
      summary: Create a new credentialDefinition
      operationId: credentialDefinitionPost
      parameters:
        - name: X-ORGANIZATION-ID
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialDefinitionCreate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialDefinitionSummary'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
  /credential-definitions/created:
    get:
      tags:
        - Credential Definitions
      summary: Get created credential definitions
      operationId: credentialDefinitionsCreatedGet
      parameters:
        - name: X-ORGANIZATION-ID
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CredentialDefinitionSummary'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
  /credentials-issuance:
    get:
      tags:
        - Credentials
      summary: List all issued credentials
      operationId: issuanceCredentialsGet
      parameters:
        - name: X-ORGANIZATION-ID
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CredentialExchange'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
    post:
      tags:
        - Credentials
      summary: Issue new credentials
      operationId: issuanceCredentialPost
      parameters:
        - name: X-ORGANIZATION-ID
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialCreate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialExchange'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
  '/credentials-issuance/{credentialId}':
    get:
      tags:
        - Credentials
      summary: Get the specified issued credential
      operationId: issuanceCredentialCredentialIdGet
      parameters:
        - name: X-ORGANIZATION-ID
          in: header
          required: true
          schema:
            type: integer
            format: int32
        - name: credentialId
          in: path
          description: An credential exchange ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialExchange'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
    delete:
      tags:
        - Credentials
      summary: Delete the specified issued credential
      operationId: issuanceCredentialCredentialIdDelete
      parameters:
        - name: X-ORGANIZATION-ID
          in: header
          required: true
          schema:
            type: integer
            format: int32
        - name: credentialId
          in: path
          description: An credential exchange ID.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
  '/credentials/{credentialId}':
    get:
      tags:
        - Credentials
      summary: Get the specified credential
      operationId: credentialCredentialIdGet
      parameters:
        - name: X-ORGANIZATION-ID
          in: header
          required: true
          schema:
            type: integer
            format: int32
        - name: credentialId
          in: path
          description: A credential ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credential'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
    delete:
      tags:
        - Credentials
      summary: Delete the specified credential
      operationId: credentialCredentialIdDelete
      parameters:
        - name: X-ORGANIZATION-ID
          in: header
          required: true
          schema:
            type: integer
            format: int32
        - name: credentialId
          in: path
          description: A credential ID.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
  /credentials:
    get:
      tags:
        - Credentials
      summary: List all credentials
      operationId: credentialsGet
      parameters:
        - name: X-ORGANIZATION-ID
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Credential'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
  /messages:
    post:
      tags:
        - Messages
      summary: Sends a message
      operationId: messagePost
      parameters:
        - name: X-ORGANIZATION-ID
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
        required: true
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
  '/organizations/{organizationId}':
    get:
      tags:
        - Organizations
      summary: Get organization
      operationId: organizationOrganizationIdGet
      parameters:
        - name: organizationId
          in: path
          description: An organization ID.
          required: true
          schema:
            type: integer
            format: int32
          example: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
    put:
      tags:
        - Organizations
      summary: Update organization
      operationId: organizationOrganizationIdPut
      parameters:
        - name: organizationId
          in: path
          description: An organization ID.
          required: true
          schema:
            type: integer
            format: int32
          example: 0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUpdate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
    delete:
      tags:
        - Organizations
      summary: Delete organization
      operationId: organizationOrganizationIdDelete
      parameters:
        - name: organizationId
          in: path
          description: An organization ID.
          required: true
          schema:
            type: integer
            format: int32
          example: 0
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
  '/organizations/{organizationId}/image':
    get:
      tags:
        - Organizations
      summary: Get organization image
      operationId: organizationOrganizationIdImageGet
      parameters:
        - name: organizationId
          in: path
          description: An organization ID.
          required: true
          schema:
            type: integer
            format: int32
          example: 0
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
    put:
      tags:
        - Organizations
      summary: Update organization image
      operationId: organizationOrganizationIdImagePut
      parameters:
        - name: organizationId
          in: path
          description: An organization ID.
          required: true
          schema:
            type: integer
            format: int32
          example: 0
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                file:
                  type: string
                  description: The image to upload. Only PNG and JPEG images are supported
                  format: binary
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
    delete:
      tags:
        - Organizations
      summary: Delete organization image
      operationId: organizationOrganizationIdImageDelete
      parameters:
        - name: organizationId
          in: path
          description: An organization ID.
          required: true
          schema:
            type: integer
            format: int32
          example: 0
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
  /organizations:
    get:
      tags:
        - Organizations
      summary: List all organizations
      operationId: organizationsGet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationSummary'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
    post:
      tags:
        - Organizations
      summary: Create a new organization and setup a new wallet
      operationId: organizationsPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationCreate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
  /schemas:
    post:
      tags:
        - Schemas
      summary: Create a new schema
      operationId: schemaPost
      parameters:
        - name: X-ORGANIZATION-ID
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SchemaCreate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaSummary'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
  '/schemas/{schemaId}':
    get:
      tags:
        - Schemas
      summary: Get schema
      operationId: schemaSchemaIdGet
      parameters:
        - name: X-ORGANIZATION-ID
          in: header
          required: true
          schema:
            type: integer
            format: int32
        - name: schemaId
          in: path
          description: A schema ID.
          required: true
          schema:
            pattern: '^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$'
            type: string
          example: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schema'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
  /schemas/created:
    get:
      tags:
        - Schemas
      summary: Get created schemas
      operationId: schemasCreatedGet
      parameters:
        - name: X-ORGANIZATION-ID
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SchemaSummary'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
  '/verification-templates/{verificationTemplateId}':
    get:
      tags:
        - Verifications
      summary: Get verification template
      operationId: verificationTemplateGet
      parameters:
        - name: X-ORGANIZATION-ID
          in: header
          required: true
          schema:
            type: integer
            format: int32
        - name: verificationTemplateId
          in: path
          description: A verification template ID.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationTemplate'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
    put:
      tags:
        - Verifications
      summary: Update verification template
      operationId: verificationTemplatePut
      parameters:
        - name: X-ORGANIZATION-ID
          in: header
          required: true
          schema:
            type: integer
            format: int32
        - name: verificationTemplateId
          in: path
          description: A verification template ID.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationTemplateParam'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationTemplate'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
    delete:
      tags:
        - Verifications
      summary: Delete verification request
      operationId: verificationTemplateDelete
      parameters:
        - name: X-ORGANIZATION-ID
          in: header
          required: true
          schema:
            type: integer
            format: int32
        - name: verificationTemplateId
          in: path
          description: A verification template ID.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
  /verification-templates:
    get:
      tags:
        - Verifications
      summary: List all verification templates
      operationId: verificationTemplatesGet
      parameters:
        - name: X-ORGANIZATION-ID
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VerificationTemplateSummary'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
    post:
      tags:
        - Verifications
      summary: Create a new Verification Template
      operationId: verificationTemplatesPost
      parameters:
        - name: X-ORGANIZATION-ID
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationTemplateParam'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationTemplate'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
  '/verifications/{verificationId}':
    get:
      tags:
        - Verifications
      summary: Get verification
      operationId: verificationGet
      parameters:
        - name: X-ORGANIZATION-ID
          in: header
          required: true
          schema:
            type: integer
            format: int32
        - name: verificationId
          in: path
          description: A verification ID.
          required: true
          schema:
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Verification'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
    delete:
      tags:
        - Verifications
      summary: Delete verification
      operationId: verificationDelete
      parameters:
        - name: X-ORGANIZATION-ID
          in: header
          required: true
          schema:
            type: integer
            format: int32
        - name: verificationId
          in: path
          description: A verification ID.
          required: true
          schema:
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
  /verifications:
    get:
      tags:
        - Verifications
      summary: List all verifications
      operationId: verificationsGet
      parameters:
        - name: X-ORGANIZATION-ID
          in: header
          required: true
          schema:
            type: integer
            format: int32
        - name: connectionId
          in: query
          description: A connection ID.
          required: false
          schema:
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'
            type: string
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VerificationSummary'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
    post:
      tags:
        - Verifications
      summary: Create a new Verification
      operationId: verificationsPost
      parameters:
        - name: X-ORGANIZATION-ID
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationCreate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Verification'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
  /webhooks:
    get:
      tags:
        - Webhooks
      summary: List all webhooks
      operationId: webhooksGet
      parameters:
        - name: X-ORGANIZATION-ID
          in: header
          required: true
          schema:
            type: integer
            format: int32
        - name: active
          in: query
          description: Filter active webhooks
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Webhook'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
    post:
      tags:
        - Webhooks
      summary: Create a new webhook
      operationId: webhookPost
      parameters:
        - name: X-ORGANIZATION-ID
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookCreate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
  '/webhooks/{webhookId}':
    get:
      tags:
        - Webhooks
      summary: Get webhook
      operationId: webhookWebhookIdGet
      parameters:
        - name: X-ORGANIZATION-ID
          in: header
          required: true
          schema:
            type: integer
            format: int32
        - name: webhookId
          in: path
          description: An webhook ID.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
    put:
      tags:
        - Webhooks
      summary: Update a webhook
      description: The update is done in such manner that all fields passed in the payload updates the existing entity. Null valuesin the payload will indicate that no changes will be applied to the existing entity.
      operationId: webhookWebhookIdPut
      parameters:
        - name: X-ORGANIZATION-ID
          in: header
          required: true
          schema:
            type: integer
            format: int32
        - name: webhookId
          in: path
          description: An webhook ID.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookUpdate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
    delete:
      tags:
        - Webhooks
      summary: Delete webhook
      operationId: webhookWebhookIdDelete
      parameters:
        - name: X-ORGANIZATION-ID
          in: header
          required: true
          schema:
            type: integer
            format: int32
        - name: webhookId
          in: path
          description: A webhook ID.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
  /webhooks/types:
    get:
      tags:
        - Webhooks
      summary: List all webhook types and their respective filters
      operationId: webhookTypesGet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebhookType'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - auth: []
  /internal/webhooks:
    get:
      tags:
        - Internal webhooks
      summary: 'List an organization''s active webhooks with given type '
      operationId: webhooksGet_1
      parameters:
        - name: organizationId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: acaPyTopic
          in: query
          required: true
          schema:
            type: string
        - name: acaPyFilter
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Webhook'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
components:
  schemas:
    ApiError:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: integer
          format: int32
        error:
          type: string
        message:
          type: string
        path:
          type: string
    ClientCreate:
      type: object
      properties:
        name:
          type: string
    Client:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    Connection:
      type: object
      properties:
        label:
          type: string
          description: The connection's label
        connectionId:
          type: string
        state:
          type: string
          enum:
            - INIT
            - INVITATION
            - REQUEST
            - RESPONSE
            - ACTIVE
            - ERROR
            - INACTIVE
    ConnectionInvitationCreate:
      type: object
      properties:
        alias:
          type: string
          description: Connection alias
          example: Some alias
    ConnectionInvitationContent:
      required:
        - recipientKeys
      type: object
      properties:
        invitationId:
          type: string
          description: The connection's invitation id
        serviceEndpoint:
          type: string
          description: The connection's service endpoint
        recipientKeys:
          type: array
          description: The list of recipient's keys
          items:
            type: string
            description: The list of recipient's keys
        label:
          type: string
          description: The connection's label
    ConnectionInvitationCreationResult:
      type: object
      properties:
        invitationUrl:
          type: string
          description: Invitation URL
          example: 'http://192.168.56.101:8020/invite?c_i=eyJAdHlwZSI6Li4ufQ=='
        connectionInvitationContent:
          $ref: '#/components/schemas/ConnectionInvitationContent'
        connectionId:
          pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'
          type: string
    ConnectionInvitation:
      type: object
      properties:
        connectionInvitationContent:
          $ref: '#/components/schemas/ConnectionInvitationContent'
        alias:
          type: string
    CredentialDefinition:
      type: object
      properties:
        id:
          pattern: '([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$'
          type: string
    CredentialDefinitionCreate:
      type: object
      properties:
        schemaId:
          pattern: '^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$'
          type: string
          description: Schema identifier
          example: 'WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0'
        tag:
          type: string
          description: Credential definition identifier tag
          example: default
        supportRevocation:
          type: boolean
          description: Revocation supported flag
        revocationRegistrySize:
          minimum: 4
          type: integer
          format: int32
    CredentialDefinitionSummary:
      type: object
      properties:
        id:
          pattern: '([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$'
          type: string
          description: The credential definition's id
    CredentialAttribute:
      type: object
      properties:
        name:
          type: string
          description: A credential attribute name
        value:
          type: string
          description: A credential attribute value
      description: A list of credential attributes
    CredentialCreate:
      type: object
      properties:
        connectionId:
          pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'
          type: string
          description: A connection ID
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        schemaId:
          pattern: '^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$'
          type: string
          description: A schema ID
        credentialDefinitionId:
          pattern: '([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$'
          type: string
          description: A credential definition ID
        comment:
          type: string
          description: A human readable comment
        attributes:
          type: array
          description: A list of credential attributes
          items:
            $ref: '#/components/schemas/CredentialAttribute'
    Credential:
      type: object
      properties:
        schemaId:
          pattern: '^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$'
          type: string
          description: A schema ID
        credentialDefinitionId:
          pattern: '([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$'
          type: string
          description: A credential definition ID
        comment:
          type: string
          description: A human readable comment
        credentialProposal:
          $ref: '#/components/schemas/CredentialProposal'
    CredentialExchange:
      type: object
      properties:
        credentialExchangeId:
          type: string
          description: A credential exchange ID
        errorMessage:
          type: string
          description: Optional error message
        state:
          type: string
          description: State of the credential transaction
        updatedAt:
          type: string
          format: date-time
        credential:
          $ref: '#/components/schemas/Credential'
    CredentialProposal:
      type: object
      properties:
        attributes:
          type: array
          description: A list of credential attributes
          items:
            $ref: '#/components/schemas/CredentialAttribute'
    Message:
      type: object
      properties:
        text:
          type: string
        connectionId:
          pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'
          type: string
    Organization:
      type: object
      properties:
        id:
          type: integer
          description: The organization's id
          format: int32
        name:
          type: string
          description: The organization's label
        clientId:
          type: integer
          description: The organization's clientId
          format: int32
        imageUrl:
          type: string
        issuer:
          type: boolean
          description: Defines if the organization acts as an issuer
    OrganizationUpdate:
      type: object
      properties:
        name:
          type: string
          description: The organization name
        issuer:
          type: boolean
          description: Defines if the organization can issue credentials
    OrganizationSummary:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    OrganizationCreate:
      type: object
      properties:
        name:
          type: string
          description: The organization name
        issuer:
          type: boolean
          description: Determine if this organization will act as a credential issuer
    SchemaCreate:
      required:
        - attributesName
        - name
        - version
      type: object
      properties:
        name:
          type: string
          description: Schema name
          example: prefs
        version:
          pattern: '^[0-9.]+$'
          type: string
          description: Schema version
          example: '1.0'
        attributesName:
          type: array
          description: List of schema attributes
          items:
            type: string
            description: List of schema attributes
    SchemaSummary:
      type: object
      properties:
        id:
          pattern: '^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$'
          type: string
          description: The schema's id
    Schema:
      type: object
      properties:
        id:
          pattern: '^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$'
          type: string
          description: The schema's id
        name:
          type: string
          description: The schema's name
        version:
          pattern: '^[0-9.]+$'
          type: string
          description: The schema's version
        attributesName:
          type: array
          description: The schema's attributes
          items:
            type: string
            description: The schema's attributes
    IndyProofReqAttrSpec:
      type: object
      properties:
        name:
          type: string
        names:
          type: array
          items:
            type: string
        nonRevoked:
          $ref: '#/components/schemas/IndyProofReqNonRevoked'
        restrictions:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
    IndyProofReqNonRevoked:
      type: object
      properties:
        from:
          type: integer
          format: int32
        to:
          type: integer
          format: int32
    IndyProofReqPredSpec:
      type: object
      properties:
        name:
          type: string
        nonRevoked:
          $ref: '#/components/schemas/IndyProofReqNonRevoked'
        getpType:
          type: string
          enum:
            - <
            - <=
            - '>='
            - '>'
        getpValue:
          type: integer
          format: int32
        restrictions:
          type: array
          items:
            $ref: '#/components/schemas/IndyProofReqPredSpecRestrictions'
    IndyProofReqPredSpecRestrictions:
      type: object
      properties:
        credDefId:
          type: string
        issuerDid:
          type: string
        schemaId:
          type: string
        schemaIssuerDid:
          type: string
        schemaName:
          type: string
        schemaVersion:
          type: string
    VerificationTemplate:
      type: object
      properties:
        id:
          type: integer
          description: The verificationTemplate id
          format: int32
          example: 0
        name:
          type: string
          description: The verificationTemplate name
          example: example
        content:
          $ref: '#/components/schemas/VerificationTemplateContent'
        organizationId:
          type: integer
          description: The organization id
          format: int32
          example: 1
    VerificationTemplateContent:
      type: object
      properties:
        name:
          type: string
          description: The verificationTemplate name
          example: example
        nonRevoked:
          $ref: '#/components/schemas/IndyProofReqNonRevoked'
        requestedAttributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IndyProofReqAttrSpec'
        requestedPredicates:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IndyProofReqPredSpec'
    VerificationTemplateParam:
      type: object
      properties:
        name:
          type: string
        content:
          $ref: '#/components/schemas/VerificationTemplateContent'
    VerificationTemplateSummary:
      type: object
      properties:
        id:
          type: integer
          description: The verificationTemplate id
          format: int32
          example: 0
        name:
          type: string
          description: The verificationTemplate name
          example: example
    Verification:
      type: object
      properties:
        verificationId:
          type: string
          description: The verification id
          example: ac32f24e-2f90-4e90-9427-c59482078a4b
        connectionId:
          type: string
          description: The connection id
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        verificationRequest:
          $ref: '#/components/schemas/VerificationRequest'
        state:
          type: string
          description: The current state of the verification
          example: verified
          enum:
            - requested
            - verified
            - rejected
            - error
        createdAt:
          type: string
          description: The time when the verification was created
          example: '2020-11-12 06:27:47.780760Z'
        updatedAt:
          type: string
          description: The time when the verification was updated
          example: '2020-11-12 06:27:50.407160Z'
    VerificationRequest:
      type: object
      properties:
        name:
          type: string
        nonce:
          type: string
        requestedAttributes:
          type: object
          additionalProperties:
            type: object
        requestedPredicates:
          type: object
          additionalProperties:
            type: object
      description: The original validation request
      example: null
    VerificationSummary:
      type: object
      properties:
        verificationId:
          type: string
          description: The verification id
          example: ac32f24e-2f90-4e90-9427-c59482078a4b
        connectionId:
          type: string
          description: The connection id
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        name:
          type: string
          description: The name of the validation
          example: example
        state:
          type: string
          description: The current state of the verification
          example: verified
          enum:
            - requested
            - verified
            - rejected
            - error
    VerificationCreate:
      type: object
      properties:
        verificationTemplateId:
          type: integer
          description: The verification template id
          format: int32
          example: 0
        connectionId:
          type: string
          description: The connection id
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
    WebhookCreate:
      required:
        - name
        - url
      type: object
      properties:
        url:
          type: string
          description: The webhook's url
        name:
          type: string
          description: The webhook's name
        active:
          type: boolean
          description: Defines if the webhook is active or not
        webhookTypes:
          type: array
          description: The webhook types associated with this webhook
          items:
            $ref: '#/components/schemas/WebhookWebhookTypeUpsert'
    WebhookWebhookTypeUpsert:
      type: object
      properties:
        id:
          type: integer
          description: The webhook type id
          format: int32
        filters:
          type: array
          description: List of webhook type filters id
          items:
            type: integer
            description: List of webhook type filters id
            format: int32
      description: The webhook types associated with this webhook
    Webhook:
      type: object
      properties:
        id:
          type: integer
          description: The webhook's id
          format: int32
        name:
          type: string
          description: The webhook's name
        url:
          type: string
          description: The webhook's url
        active:
          type: boolean
          description: Defines if the webhook is active or not
        secret:
          type: string
          description: Api key to authenticate against the url
        webhookTypes:
          type: array
          description: The webhook types associated with this webhook
          items:
            $ref: '#/components/schemas/WebhookType'
    WebhookType:
      type: object
      properties:
        id:
          type: integer
          description: The webhook type id
          format: int32
        name:
          type: string
          description: The webhook type name
        description:
          type: string
          description: The webhook type description
        filters:
          type: array
          description: List of filters available
          items:
            $ref: '#/components/schemas/WebhookTypeFilter'
      description: The webhook types associated with this webhook
    WebhookTypeFilter:
      type: object
      properties:
        id:
          type: integer
          description: The webhook type id
          format: int32
        name:
          type: string
          description: The webhook type name
        description:
          type: string
          description: The webhook type description
      description: List of filters available
    WebhookUpdate:
      required:
        - webhookTypes
      type: object
      properties:
        active:
          type: boolean
          description: Defines if the webhook is active or not
        name:
          type: string
          description: The webhook's name
        url:
          type: string
          description: Defines the webhook url
        webhookTypes:
          type: array
          description: The webhook types associated with this webhook
          items:
            $ref: '#/components/schemas/WebhookWebhookTypeUpsert'
  securitySchemes:
    auth:
      type: apiKey
      description: Only for local testing !
      name: X-CLIENT-ID
      in: header
